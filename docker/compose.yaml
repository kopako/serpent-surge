services:
  db:
    image: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=$DB_NAME
      - MYSQL_USER=$DB_USER
      - MYSQL_PASSWORD=$DB_PASSWORD
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    volumes:
      - ../game/serpent-surge-main/db/init.sql:/docker-entrypoint-initdb.d/1.sql
    networks:
      - private
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  backend:
    build:
      dockerfile: ./docker/backend.Dockerfile
      context: ../
      args:
      - NODE_ENV=production
    command: npm start
    environment:
      - NODE_ENV=production
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
    ports:
      - 3000:3000
    networks:
      - private
    depends_on:
      - db
    restart: on-failure
  frontend:
    image: ${FRONTEND_IMAGE:-jonasal/nginx-certbot:latest}
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../game/serpent-surge-main/frontend:/usr/share/nginx/html/
      - ${FRONTEND_CONF:-../game/serpent-surge-main/nginx/game-prod.conf}:/etc/nginx/templates/default.conf.template
      - nginx_secrets:/etc/letsencrypt
      - ./user_conf.d:/etc/nginx/user_conf.d
    environment:
      - NGINX_HOST=$PUBLIC_DNS_NAME
      - NGINX_PORT=$FRONTEND_PORT
      - BACKEND_HOST=backend
      - BACKEND_PORT=3000
      - CERTBOT_EMAIL=$CERTBOT_EMAIL
    networks:
      - public
      - private
    depends_on:
      - backend
networks:
  public:
  private:
volumes:
  nginx_secrets: